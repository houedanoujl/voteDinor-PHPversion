#!/bin/bash

# Script d'initialisation robuste pour le conteneur Laravel

set -e

echo "üöÄ D√©marrage de l'application DINOR Laravel..."

# Cr√©er les r√©pertoires de logs s'ils n'existent pas
mkdir -p /var/www/storage/logs

# G√©n√©rer la cl√© d'application si n√©cessaire
if [ -z "$APP_KEY" ] || [ "$APP_KEY" = "" ]; then
    echo "üîë G√©n√©ration de la cl√© d'application..."
    php artisan key:generate --force || true
fi

# Attendre que MySQL soit disponible (avec timeout)
echo "‚è≥ Attente de la base de donn√©es..."
TIMEOUT=60
COUNTER=0

while ! php artisan migrate:status > /dev/null 2>&1; do
    echo "Base de donn√©es non disponible, attente 2 secondes... ($COUNTER/$TIMEOUT)"
    sleep 2
    COUNTER=$((COUNTER + 2))

    if [ $COUNTER -ge $TIMEOUT ]; then
        echo "‚ö†Ô∏è Timeout atteint, d√©marrage sans attendre la DB"
        break
    fi
done

if [ $COUNTER -lt $TIMEOUT ]; then
    echo "‚úÖ Base de donn√©es connect√©e"

    # Ex√©cuter les migrations
    echo "üìä Ex√©cution des migrations..."
    php artisan migrate --force || echo "‚ö†Ô∏è Erreur lors des migrations, on continue..."

    # Nettoyer le cache
    echo "üßπ Nettoyage du cache..."
    php artisan config:cache || true
    php artisan route:cache || true
    php artisan view:cache || true
fi

echo "‚úÖ D√©marrage de PHP-FPM..."

# D√©marrer PHP-FPM en mode foreground
exec php-fpm
